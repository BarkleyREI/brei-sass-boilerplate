// Breakpoints
@mixin bp($point) {

	@if $point == print {
		@media only print { @content; }
	}

}

// PX to EM conversion
@mixin em_width($px) { width: #{$px / 16}em; }
@mixin em_height($px) { height: #{$px / 16}em; }
@mixin em_maxwidth($px) { max-width: #{$px / 16}em; }
@mixin em_maxheight($px) { max-height: #{$px / 16}em; }
@mixin em_margin($top:0,$right:0,$bot:$top,$left:$right) { margin: #{$top / 16}em #{$right / 16}em #{$bot / 16}em #{$left / 16}em }
@mixin em_padding($top:0,$right:0,$bot:$top,$left:$right) { padding: #{$top / 16}em #{$right / 16}em #{$bot / 16}em #{$left / 16}em }
@mixin em_fontsize($px) { font-size: #{$px / 16}em; }

// All vendor prefixes must be mixins
@mixin box_shadow($hoffset: 0, $voffset: 0, $blur: 0, $spread: 0, $color: $black, $inset: false) {

	@if $inset == false {
		-webkit-box-shadow: $hoffset $voffset $blur $spread $color;
		box-shadow: $hoffset $voffset $blur $spread $color;
	} @else {
		-webkit-box-shadow: inset $hoffset $voffset $blur $spread $color;
		box-shadow: inset $hoffset $voffset $blur $spread $color;
	}

}

@mixin opacity($i) {
	$forie: $i * 100;

	-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity="+$forie+")";
	filter: alpha(opacity=$forie);
	opacity: $i;
}

@mixin transition($sel: all,$time: 1s,$ease: linear) {
	-webkit-transition: $sel $time $time;
	-moz-transition: $sel $time $time;
	-o-transition: $sel $time $time;
	-ms-transition: $sel $time $time;
	transition: $sel $time $time;
}
